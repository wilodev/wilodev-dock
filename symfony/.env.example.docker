# =================================================================
# CONFIGURACIÓN DOCKER PARA PROYECTOS SYMFONY
# =================================================================
# Este archivo define variables de entorno para contenedores Docker,
# NO para la aplicación Symfony en sí (esa usará su propio .env)
# =================================================================

# ----- CONFIGURACIÓN DEL PROYECTO -----
# Nombre del proyecto (usado para nombrar contenedores)
# Se usará como prefijo para todos los contenedores de este proyecto
APP_NAME=symfony-app

# Dominio donde se accederá a la aplicación
# Traefik dirige el tráfico a este dominio hacia la aplicación
APP_DOMAIN=symfony.localhost

# Entorno de Symfony (dev, prod, test)
# Determina el comportamiento de la aplicación y el nivel de depuración
SYMFONY_ENV=dev

# Clave secreta para Symfony (cambiar en producción)
# Usada para encriptar sesiones y datos sensibles
APP_SECRET=0e5e594b913385321fbf1d70eb5321cd


# ----- CONFIGURACIÓN DE DOCKER -----
# Versión de PHP a utilizar (8.2, 8.1, 7.4, etc.)
# Define la versión base de PHP-FPM para el contenedor
PHP_VERSION=8.2

# Versión de Node.js a utilizar (18, 16, 14, etc.)
# Para compilación de assets con Webpack Encore
NODE_VERSION=18

# Nombre de la red Docker (debe coincidir con la red externa existente)
# Esta red permite la comunicación con otros servicios como MySQL
NETWORK_NAME=web-network


# ----- CONFIGURACIÓN DE BASE DE DATOS -----
# URL de conexión completa para Doctrine (usando servicio externo)
# Este formato incluye todos los parámetros de conexión en una sola variable
DATABASE_URL=mysql://usuario:contraseña@mysql-container:3306/name_bd?serverVersion=8.0

# Variables individuales (alternativa a DATABASE_URL)
# Parametrización separada que algunos desarrolladores prefieren
DB_CONNECTION=mysql
DB_HOST=mysql-container
DB_PORT=3306
DB_DATABASE=symfony_db
DB_USERNAME=symfony_user
DB_PASSWORD=symfony_password


# ----- CONFIGURACIÓN DE REDIS -----
# URL de conexión a Redis para caché, sesiones y mensajería
# Formato DSN para el componente Redis de Symfony
REDIS_URL=redis://redis:6379

# Prefijo para las claves de Redis (evita conflictos en servidores compartidos)
# Útil cuando múltiples aplicaciones comparten un servidor Redis
REDIS_PREFIX=symfony_


# ----- CONFIGURACIÓN DE CORREO -----
# DSN para el componente Mailer de Symfony
# Configura el envío de correos a través del servicio MailHog
MAILER_DSN=smtp://mailhog:1025


# ----- CONFIGURACIÓN DE WEBPACK ENCORE -----
# Habilitar/deshabilitar source maps para desarrollo
# Los source maps facilitan la depuración de JavaScript y CSS
ENCORE_SOURCE_MAPS=true

# Habilitar/deshabilitar versioning de assets
# El versionado ayuda con la invalidación de caché en producción
ENCORE_VERSIONING=false


# ----- OPCIONES ADICIONALES -----
# Permitir a Composer ejecutarse como superusuario (útil en Docker)
# Normalmente Composer muestra advertencias al ejecutarse como root
COMPOSER_ALLOW_SUPERUSER=1

# Opciones para XDebug (desarrollo)
# Modos disponibles: develop, debug, profile, trace, coverage
XDEBUG_MODE=off
# Descomenta la siguiente línea para activar depuración
# XDEBUG_MODE=develop,debug
# Host donde se ejecuta el cliente de depuración (IDE)
XDEBUG_CLIENT_HOST=host.docker.internal
# Puerto en el que escucha el cliente de depuración
XDEBUG_CLIENT_PORT=9003

# Configuración de usuario dentro del contenedor (debe coincidir con Dockerfile)
# Evita problemas de permisos entre el host y el contenedor
USER_ID=1000
GROUP_ID=1000