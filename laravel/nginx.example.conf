# =================================================================
# CONFIGURACIÓN DE NGINX PARA LARAVEL
# =================================================================
# Este archivo configura Nginx como servidor web para aplicaciones Laravel
# Proporciona optimizaciones de rendimiento, seguridad y manejo de rutas
# =================================================================

# ----- CONFIGURACIÓN DEL SERVIDOR -----
server {
    # Define que el servidor escucha en el puerto 80 (HTTP)
    listen 80;
    
    # Define el nombre del servidor (dominio) que Nginx responderá
    # Se configura dinámicamente con el subdominio establecido en el .env
    server_name ${APP_DOMAIN};
    
    # Directorio raíz donde se encuentra el código fuente de la aplicación
    root /var/www/html/public;
    
    # Archivo de índice predeterminado que se servirá cuando se solicita un directorio
    index index.php;
    
    # Codificación de caracteres para las respuestas
    charset utf-8;

    # ----- CONFIGURACIÓN DE LOGS -----
    # Ruta del archivo de log para las solicitudes
    access_log /var/log/nginx/access.log;
    
    # Ruta del archivo de log para los errores
    error_log /var/log/nginx/error.log;

    # ----- CONFIGURACIÓN DE ARCHIVOS ESTÁTICOS -----
    # Maneja las solicitudes de favicons, evitando registrar errores 404
    location = /favicon.ico {
        # Acceso al archivo en la ubicación especificada
        access_log off;
        # No registra los errores para estos archivos
        log_not_found off;
    }
    
    # Configuración similar para el archivo robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }
    
    # ----- CONFIGURACIÓN DE SEGURIDAD -----
    # Niega el acceso a archivos .htaccess y otros archivos ocultos
    location ~ /\.(?!well-known).* {
        # Rechaza cualquier solicitud a archivos que empiecen con punto
        # excepto los del directorio .well-known (usado para SSL)
        deny all;
        # Oculta la información del error
        access_log off;
        log_not_found off;
    }

    # ----- CONFIGURACIÓN PARA PHP -----
    # Procesa las solicitudes de archivos PHP
    location ~ \.php$ {
        # Pasa la solicitud al procesador FastCGI (PHP-FPM)
        fastcgi_pass app:9000;
        # Especifica el nombre del script para FastCGI
        fastcgi_index index.php;
        # Include el archivo de configuración FastCGI estándar
        include fastcgi_params;
        # Define el script FastCGI con la ruta completa
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # Ajustes de buffer para mejorar el rendimiento
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        # Tiempo máximo de espera para respuestas FastCGI
        fastcgi_read_timeout 300;
    }

    # ----- CONFIGURACIÓN PARA LARAVEL -----
    # Maneja todas las demás rutas y las envía al front controller de Laravel
    location / {
        # Intenta servir el archivo o directorio solicitado directamente
        try_files $uri $uri/ /index.php?$query_string;
        # Esta configuración es clave para Laravel, permitiendo el enrutamiento amigable
    }

    # ----- CONFIGURACIÓN DE CACHÉ Y COMPRESIÓN -----
    # Caché para archivos estáticos (imágenes, CSS, JS)
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        # Tiempo de expiración de la caché
        expires 30d;
        # Añade cabeceras de caché
        add_header Cache-Control "public, no-transform";
        # Tiempo máximo en segundos para mantener la conexión abierta
        keepalive_timeout 65;
    }
    
    # Activa compresión gzip para tipos de contenido específicos
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_comp_level 6;
    gzip_min_length 1000;

    # ----- CONFIGURACIÓN DE WEBSOCKETS PARA LARAVEL ECHO -----
    # Maneja conexiones WebSocket para Laravel Echo Server
    location /socket.io {
        # Proxy hacia el servicio de Echo Server
        proxy_pass http://echo-server:6001;
        # Configuración específica para WebSockets
        proxy_http_version 1.1;
        # Actualiza la conexión para soportar WebSockets
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # Pasa el nombre de host original al servicio
        proxy_set_header Host $host;
        # Evita que se use la caché para estas conexiones
        proxy_cache_bypass $http_upgrade;
        # Tiempo de espera para WebSockets
        proxy_read_timeout 60s;
    }

    # ----- LÍMITES Y PROTECCIÓN -----
    # Limita el tamaño máximo de carga de archivos
    client_max_body_size 100M;
    # Tiempo de espera para el cuerpo de la solicitud
    client_body_timeout 60s;
    # Tiempo de espera para la cabecera de la solicitud
    client_header_timeout 60s;
    # Limita la tasa de conexiones por IP
    limit_conn addr 10;
}