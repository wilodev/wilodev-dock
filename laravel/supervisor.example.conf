# =================================================================
# CONFIGURACIÓN DE SUPERVISOR PARA LARAVEL
# =================================================================
# Supervisor controla y gestiona procesos en segundo plano.
# En Laravel, lo usamos principalmente para manejar colas (queues).
# Esta configuración permite que los trabajos en cola continúen
# procesándose incluso si fallan o se detienen inesperadamente.
# =================================================================

# ----- CONFIGURACIÓN DE COLAS CON PRIORIDADES -----
[program:laravel-high-priority]
# Define un programa para procesar colas de alta prioridad
process_name=%(program_name)s_%(process_num)02d
# Formato del nombre: "laravel-high-priority_00", "laravel-high-priority_01", etc.
command=php /var/www/html/artisan queue:work --queue=high --sleep=3 --tries=3
# Comando que ejecuta el worker de cola con parámetros:
#   --queue=high: Procesa solo la cola "high"
#   --sleep=3: Espera 3 segundos entre consultas cuando la cola está vacía
#   --tries=3: Reintenta cada trabajo fallido hasta 3 veces
autostart=true
# Inicia automáticamente cuando Supervisor arranca
autorestart=true
# Reinicia automáticamente si el proceso termina inesperadamente
stopasgroup=true
killasgroup=true
# Estas opciones aseguran que se detengan todos los procesos hijos al detener el principal
user=www-data
# Usuario del sistema con el que se ejecuta el proceso
numprocs=2
# Ejecuta 2 procesos en paralelo para esta cola de alta prioridad
redirect_stderr=true
# Redirige los errores al flujo de salida estándar
stdout_logfile=/var/www/html/storage/logs/worker-high.log
# Registra la salida en este archivo de log

[program:laravel-default]
# Define un programa para procesar colas de prioridad normal
process_name=%(program_name)s_%(process_num)02d
command=php /var/www/html/artisan queue:work --queue=default --sleep=3 --tries=3
# Similar al anterior, pero procesa la cola "default"
autostart=true
autorestart=true
stopasgroup=true
killasgroup=true
user=www-data
numprocs=1
# Solo 1 proceso para la cola normal, dando prioridad a la cola "high"
redirect_stderr=true
stdout_logfile=/var/www/html/storage/logs/worker-default.log

[program:laravel-low]
# Define un programa para procesar colas de baja prioridad
process_name=%(program_name)s_%(process_num)02d
command=php /var/www/html/artisan queue:work --queue=low --sleep=3 --tries=3 --max-time=3600
# Similar a los anteriores, pero:
#   --queue=low: Procesa la cola "low" (baja prioridad)
#   --max-time=3600: Reinicia el worker después de 1 hora para evitar fugas de memoria
autostart=true
autorestart=true
stopasgroup=true
killasgroup=true
user=www-data
numprocs=1
redirect_stderr=true
stdout_logfile=/var/www/html/storage/logs/worker-low.log

# ----- CONFIGURACIÓN PARA LARAVEL HORIZON (OPCIONAL) -----
# Descomenta esta sección si utilizas Laravel Horizon para gestión avanzada de colas
# [program:horizon]
# process_name=%(program_name)s
# command=php /var/www/html/artisan horizon
# autostart=true
# autorestart=true
# user=www-data
# redirect_stderr=true
# stdout_logfile=/var/www/html/storage/logs/horizon.log
# stopwaitsecs=3600

# ----- GRUPO DE PROCESOS PARA GESTIONAR TODOS LOS WORKERS JUNTOS -----
[group:laravel-workers]
# Define un grupo que incluye todos los programas de workers
programs=laravel-high-priority,laravel-default,laravel-low
# Lista de programas incluidos en este grupo, separados por comas
# Esto permite iniciar/detener todos los workers con un solo comando:
#   supervisorctl start laravel-workers:*
#   supervisorctl stop laravel-workers:*
#   supervisorctl restart laravel-workers:*

# ----- COMANDOS ÚTILES DE SUPERVISOR -----
# supervisorctl status                     # Ver estado de todos los procesos
# supervisorctl start laravel-workers:*    # Iniciar todos los workers
# supervisorctl stop laravel-workers:*     # Detener todos los workers
# supervisorctl restart laravel-workers:*  # Reiniciar todos los workers
# supervisorctl start laravel-high-priority:* # Iniciar solo workers de alta prioridad